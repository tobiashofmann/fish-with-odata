<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.itsfullofstars</groupId>
	<artifactId>iotserver</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>
	<name>HCP IoT demo server app </name>
	<url>https://github.com/tobiashofmann/fish-with-odata</url>

	<properties>
		<!-- SONAR -->
		<sonar.language>java</sonar.language>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sap.cloud.sdk.path>${project.basedir}/sdk</sap.cloud.sdk.path>
		<sap.cloud.sdk.version>2.79.10.4</sap.cloud.sdk.version>
		<sap.cloud.sdk.plugin>neo-javaee6-wp-maven-plugin</sap.cloud.sdk.plugin>
		<sap.cloud.jdk.version>1.7</sap.cloud.jdk.version>
		<sap.cloud.host>hana.ondemand.com</sap.cloud.host>
		<sap.cloud.application>sample</sap.cloud.application>
		<local.server.root>${project.build.directory}/server</local.server.root>
		<local.server.host>localhost</local.server.host>
		<local.server.shutdown.port>7003</local.server.shutdown.port>
		<local.server.jmx.port>7004</local.server.jmx.port>
		<local.server.http.port>7080</local.server.http.port>
		<local.server.https.port>7443</local.server.https.port>
		<local.server.ajp.port>7009</local.server.ajp.port>
		<eclipselink.version>2.6.2</eclipselink.version>
		<version.jaxrs-api>2.0.1</version.jaxrs-api>
		<olingo.version>2.0.6</olingo.version>
		<version.cxf>2.7.6</version.cxf>
		<version.jaxrs-api>2.0-m10</version.jaxrs-api>
		<junit.version>5.2.0</junit.version>
		<junit.platform.version>1.2.0</junit.platform.version>
	</properties>

	<dependencies>
		<!-- The SAP HANA Cloud Platform Java EE 6 Web Profile API -->
		<dependency>
			<groupId>com.sap.cloud</groupId>
			<artifactId>neo-javaee6-wp-api</artifactId>
			<version>${sap.cloud.sdk.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sap.cloud</groupId>
			<artifactId>neo-java-web-maven-plugin</artifactId>
			<version>1.94.22</version>
		</dependency>
		<!-- EclipseLink -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
			<version>${eclipselink.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>${eclipselink.version}</version>
		</dependency>
		<!-- Maven -->
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.5</version>
			<type>maven-plugin</type>
		</dependency>
		<!-- Olingo -->
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-jpa-processor-api</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-api-annotation</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-jpa-processor-core</artifactId>
			<version>${olingo.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-api</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-core</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-annotation-processor-api</artifactId>
			<version>${olingo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-annotation-processor-core</artifactId>
			<version>${olingo.version}</version>
		</dependency>

		<!-- Additional dependencies -->

		<!-- Servlet/REST dependencies -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>${version.jaxrs-api}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${version.cxf}</version>
		</dependency>

		<!-- jUnit -->
		
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-api</artifactId>
		    <version>${junit.version}</version>
		    <scope>test</scope>
		</dependency>
		    <dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-engine</artifactId>
		    <version>${junit.version}</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.junit.vintage</groupId>
		    <artifactId>junit-vintage-engine</artifactId>
		    <version>${junit.version}</version>
		    <scope>test</scope>
		    </dependency>
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-launcher</artifactId>
		    <version>${junit.platform.version}</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-runner</artifactId>
		    <version>${junit.platform.version}</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<outputDirectory>${project.basedir}/war/WEB-INF/classes</outputDirectory>
		<testOutputDirectory>${project.basedir}/bin/classes</testOutputDirectory>

		<plugins>

			<!-- Map the Eclipse file system layout to the Maven plug-ins -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<warName>${project.artifactId}</warName>
					<warSourceDirectory>WebContent</warSourceDirectory>
					<archive>
						<manifestFile>WebContent/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
			<plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.21.0</version>
				<dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit.platform.version}</version>
                    </dependency>
                </dependencies>
			</plugin>
           
			<!-- Include only integration tests for maven-failsafe-plugin that is 
				run in integration-test phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
			</plugin>
			<!-- jMeter -->
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- SonarQube -->
			    <plugin>
			        <groupId>org.sonarsource.scanner.maven</groupId>
			        <artifactId>sonar-maven-plugin</artifactId>
			        <version>3.0.1</version>
			    </plugin>
				<!-- Define the version of the Maven Plugin for SAP HANA Cloud Platform 
					we want to use -->

				<!-- Force m2e to ignore plugin goal that it doesn't support naturally -->
				
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.1</version>            
            </plugin>
		</plugins>
	</reporting>

</project>
